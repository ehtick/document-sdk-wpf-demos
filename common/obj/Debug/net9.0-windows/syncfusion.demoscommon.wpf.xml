<?xml version="1.0"?>
<doc>
    <assembly>
        <name>syncfusion.demoscommon.wpf</name>
    </assembly>
    <members>
        <member name="M:syncfusion.demoscommon.wpf.LaunchShowcaseDemoAction.Window_Closed(System.Object,System.EventArgs)">
            <summary>
            Occurs when the window is about to close. 
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.OpenSourceCodeAction.OpenVS(System.String)">
            <summary>
            Used to open the Olap samples in VS
            </summary>
            <param name="selectedProduct">Slected product demo</param>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.UrlNavigation">
            <summary>
            This behavior is a trigger action that opens a URL in the default browser when a hyperlink is clicked, using the Process.Start method.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ProductsListBehavior.sampleBrowserViewModel">
            <summary>
            Maintains view model refference
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ProductsListBehavior.scrollViewer">
            <summary>
            Maintains scroll viewer refference
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.AssociatedObject_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the AssociatedObject control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.ShowcaseList_PreviewMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Occurs when the mouse wheel of show case demos
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.NavigateBackward_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the previous Showcase Demos button is pressed.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.ScrollViewer_ScrollChanged(System.Object,System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Occurs when changes are detected to the scroll position, extent, or viewport  size.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.NavigateForward_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the next Showcase Demos button is pressed.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.Animate(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Helps to perform showcase demo scrolling animation
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.LinkedInlink_RequestNavigate(System.Object,System.Windows.Navigation.RequestNavigateEventArgs)">
            <summary>
             Occurs when navigation events are requested.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ScrollToSelectedItemAction.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ScrollToSelectedItemAction.AssociatedObject_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the demolist is loaded
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ScrollToSelectedItemAction.AssociatedObject_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Occurs when the selection of product demos changes
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ScrollToSelectedItemAction.ScrollSelectedIntoView(System.Object)">
            <summary>
            Scrolls the selected item into view for a ListView control if it exists.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ScrollToSelectedItemAction.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.BooleanToVisibilityConverter">
            <summary>
            Convert between boolean and visibility
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.BoolNegationConverter">
            <summary>
            Value converter that applies NOT operator to a <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BoolNegationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a boolean value to its negation.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to negate.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BoolNegationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back a boolean value to its negation.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to negate.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.BoolToObjectConverter">
            <summary>
            This class converts a boolean value into an other object.
            Can be used to convert true/false to visibility, a couple of colors, couple of images, etc.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.BoolToObjectConverter.TrueValueProperty">
            <summary>
            Identifies the <see cref="P:syncfusion.demoscommon.wpf.BoolToObjectConverter.TrueValue"/> property.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.BoolToObjectConverter.FalseValueProperty">
            <summary>
            Identifies the <see cref="P:syncfusion.demoscommon.wpf.BoolToObjectConverter.FalseValue"/> property.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.BoolToObjectConverter.TrueValue">
            <summary>
            Gets or sets the value to be returned when the boolean is true
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.BoolToObjectConverter.FalseValue">
            <summary>
            Gets or sets the value to be returned when the boolean is false
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.CollectionVisibilityConverter">
            <summary>
            This class converts a collection size to visibility.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.CollectionVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.CollectionVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.EmptyCollectionToObjectConverter">
            <summary>
            This class converts a collection size into an other object.
            Can be used to convert to bind a visibility, a color or an image to the size of the collection.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.EmptyCollectionToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks collection for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is an empty collection or does not implement IEnumerable, false otherwise.</returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter">
            <summary>
            This class converts an object value into a an object (if the value is null returns the false value).
            Can be used to bind a visibility, a color or an image to the value of an object.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.NotEmptyValueProperty">
            <summary>
            Identifies the <see cref="P:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.NotEmptyValue"/> property.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.EmptyValueProperty">
            <summary>
            Identifies the <see cref="P:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.EmptyValue"/> property.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.NotEmptyValue">
            <summary>
            Gets or sets the value to be returned when the object is neither null nor empty
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.EmptyValue">
            <summary>
            Gets or sets the value to be returned when the object is either null or empty
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.EmptyObjectToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks value for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is null, false otherwise.</returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.EmptyStringToObjectConverter">
            <summary>
            This class converts a string value into a an object (if the value is null or empty returns the false value).
            Can be used to bind a visibility, a color or an image to the value of a string.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.EmptyStringToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks string for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is null or empty string, false otherwise.</returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.EnumValuesExtension">
            <summary>
            A markup extension that returns a collection of values of a specific <see langword="enum"/>
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.EnumValuesExtension.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the target <see langword="enum"/>
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.EnumValuesExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ObjectNullToVisibilityConverter">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> when object is not null and <see cref="F:System.Windows.Visibility.Collapsed"/> when object is null.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.StringVisibilityConverter">
            <summary>
            This class converts a string value into a Visibility value (if the value is null or empty returns a collapsed value).
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.StringVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.StringVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.VisibilityToBoolConverter">
            <summary>
            This class converts a Visibility enumeration to a boolean value.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.AISettings">
            <summary>
            Represents a helper class that contain API related to AI Services.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.IsCredentialValid">
            <summary>
            Gets or sets a value indicating whether the AI Credentials is valid or not.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.ModelName">
            <summary>
            Gets or sets the model name in the AI Setup Window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.EndPoint">
            <summary>
            Gets or sets the end point in the AI Setup Window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.Key">
            <summary>
            Gets or sets the key in the AI Setup Window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.ClientAI">
            <summary>
            Gets or sets a value indicating the AI chat client.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.DemoBrowserViewModel">
            <summary>
            Gets or sets a value indicating DataContext of MainWindow. 
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.AISettings.ErrorMessage">
            <summary>
            Gets or sets a value indicating the error message details.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AISettings.ShowAISettingsWindow">
            <summary>
            Helps to show AISettingsWindow.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AISettings.CloseAISettingsWindow">
            <summary>
            Helps to close the AISettingsWindow.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AISettings.ValidateCredentials">
            <summary>
            Initializes a new instance of the <see cref="!:SemanticKernelAI"/> class.
            </summary>
            <param name="key">Key for the semantic kernal API</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.LicenseKeyLocator.FindLicenseKey">
            <summary>
            Helper method to find a syncfusion license key.
            </summary>
            <returns>License Key</returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ErrorLogging">
            <summary>
            Logs the errors in ErrorLog.txt
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ErrorLogging.ClearPreviousLogs">
            <summary>
            Method to Clear previous logs
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ErrorLogging.LogError(System.Object)">
            <summary>
            Method to take care of error logging operations
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ErrorLogging.LogBindingError(System.Object)">
            <summary>
            Helps to log binding error
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ErrorLogging.LogLiveDemos(System.Object)">
            <summary>
            Helps to live demos information
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.BindingErrorAutomation">
            <summary>
            Automate the binding error while sample loading.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.BindingErrorAutomation.isLiveDemo">
            <summary>
            Gets or sets the value indicating whether the  tutorial or showcase demos are live demos or not.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.BindingErrorAutomation.viewModel">
            <summary>
            Maintains view model refference
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.RunBindingErrorAutomation(syncfusion.demoscommon.wpf.DemoBrowserViewModel)">
            <summary>
            Helps to run the binding error log automation
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.UpdateSelectedSample">
            <summary>
            Helps to update the selected sample
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.UpdateSelectedProduct(syncfusion.demoscommon.wpf.DemoBrowserViewModel,System.Int32)">
            <summary>
            Helps to update the selected product
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.LaunchShowCaseDemo">
            <summary>
            Helps to launch show demos .
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.DemoTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the tutorial demos timer interval has elapsed.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.ShowcaseDemoTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the showcase demos timer interval has elapsed.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.LaunchDemo(syncfusion.demoscommon.wpf.DemoInfo)">
            <summary>
            Helps to launch window mode demos.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.CloseAllWindow">
            <summary>
            Helps to close the application windows
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BindingErrorAutomation.OnBindingError(System.String,syncfusion.demoscommon.wpf.DemoBrowserViewModel)">
            <summary>
            Helps to log the Binding Error
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.BindingErrorListener">
            <summary>
             Trace the binding errors occurs in the application.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.MainWindow.ValidateCrendentials">
            <summary>
            Helps to validate AI Credentials.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.MainWindow.OnCreateAutomationPeer">
            <summary>
             Occurs when the content that is being navigated to has been found
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.NavigationViewModel.NavigationItem">
            <summary>
            Gets or set the NavigationItem Text
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.NavigationViewModel.NavigationIcon">
            <summary>
            Gets or set the NavigationItem Icon
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DemoLauchMode">
            <summary>
            Specifies the launch mode of  demo.
            </summary>    
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoLauchMode.Default">
            <summary>
            To load demo inside the sample browser 
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoLauchMode.Window">
            <summary>
            To lauch this demo in separate window.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.Tag">
            <summary>
            Specifies the sample status
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.Tag.None">
            <summary>
            No changes done in your demo
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.Tag.New">
            <summary>
            New Sample
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.Tag.Updated">
            <summary>
            Changes are made in your sample.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ThemeMode">
            <summary>
            Determine the whether main window theme should traverse to the your demos in the sample browser
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ThemeMode.None">
            <summary>
            Main window theme will not apply to your demos.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ThemeMode.Default">
            <summary>
            Office2019Colorful theme will apply
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ThemeMode.Inherit">
            <summary>
            Main window theme will apply to your demos
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ProductDemo">
            <summary>
            Provides information about the Products.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.IsPreview">
            <summary>
            Gets or set a value indicating whether the control is in preview or not.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.GalleryViewImageSource">
            <summary>
            Gets or set a value of ImageSource to represent the control in GalleryView.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.ListViewImagePathData">
            <summary>
            Gets or set a value of ImagePathData to represent the control in listview.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.HeaderImageSource">
            <summary>
            Gets or set a value of HeaderImageSource which represents the ProductCategory in ListView.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.ControlDescription">
            <summary>
            Gets or sets the control description
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.IsHighlighted">
            <summary>
            Gets or sets the value of IsHighlighted which denotes whether the Product Demo is highlighted or not
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.ProductDemo.demoLauchMode">
            <summary>
            Gets or sets DemoLaunchMode which denotes whether to load Product demos inside sample browser or in child window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.Product">
            <summary>
            Gets or sets the Product name.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.Demos">
            <summary>
            Gets or sets the collection of product demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.ProductCategory">
            <summary>
            Gets or sets the Product category.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.DemoLauchMode">
            <summary>
            Gets or sets DemoLaunchMode which denotes whether to load Product demos inside sample browser or in child window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductDemo.Tag">
            <summary>
            Gets or sets the Product status.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DemoInfo">
            <summary>
            Provides information about the product demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.WhatsNewDescription">
            <summary>
            Gets or sets the sample's whatsnew description.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.AISampleDescription">
            <summary>
            Gets or sets the AI sample's description.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.ProductInfo">
            <summary>
            Gets or sets the Product details of the SelectedDemo.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.PreviewTag">
            <summary>
            Gets or set a value indicating whether the control is in preview or not.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.ControlName">
            <summary>
            Gets or sets the ControlName
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.GroupName">
            <summary>
            Gets or sets the GroupName of your demo.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.SampleName">
            <summary>
            Specify your the sample name which is displayed in sample browser using this property
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoInfo.title">
            <summary>
            Specify your sample title which is displayed in sample browser using this property
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.Description">
            <summary>
            Gets or sets the description of the sample.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.DemoViewType">
            <summary>
            Gets or sets the viewtype of the sample.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.ImagePath">
             <summary>
             Images which needs to be show inside the sample browser
             </summary>
            <remarks>It applicable only for showcase demo</remarks>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.DemoLauchMode">
            <summary>
            Gets or sets DemoLaunchMode which denotes whether to load demo insider sample browser or in separate window.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoInfo.showBusyIndicator">
            <summary>
            Gets or sets the value indicating whether the busy indicator needs to display or not while load the demo.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.ThemeMode">
            <summary>
            Gets or sets the value determine the whether main window theme should traverse to the your demos in the sample browser
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.Tag">
            <summary>
            Gets or sets the sample status.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.ShowBusyIndicator">
            <summary>
            Gets or sets the value indicating whether the busy indicator needs to display or not while load the demo.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.IsShowcase">
            <summary>
            Gets or sets the value of IsShowcase which denotes whether the ShowcaseDemos needs to be Showcased or not
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.IsAISample">
            <summary>
            Gets or sets the AI status.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.Documentations">
            <summary>
            Gets or sets a collection of documentation items.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoInfo.SubCategoryDemos">
            <summary>
            Gets or sets a collection of subdemo items.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.Documentation">
            <summary>
            This class represents documentation with content and a page URI.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Documentation.Content">
            <summary>
            A property that represents the content or text associated with the link.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Documentation.Uri">
            <summary>
            A property that represents a Uniform Resource Identifier (URI) for a specific page or location.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ProductInfo">
            <summary>
            Provide information about the product and product demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductInfo.SampleName">
            <summary>
            Gets or sets the sample name
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductInfo.ProductDemo">
            <summary>
            Gets or sets the Product information.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.ProductInfo.ProductDemoInfo">
            <summary>
            Gets or set demo information.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.Name">
            <summary>
            Denotes the palette name
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.Theme">
            <summary>
            Denotes the Theme Name
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.PrimaryBackground">
            <summary>
            Denotes the palette primary background brush
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.PrimaryForeground">
            <summary>
            Denotes the palette primary foreground brush
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.PrimaryBackgroundAlt">
            <summary>
            Denotes the palette primay alternate background brush
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Palette.DisplayName">
            <summary>
            denotes the name to be displayed in the UI
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.ThemeName">
            <summary>
            Denotes the name of the theme
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.ThemeType">
            <summary>
            Denotes the Type of the theme
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.EllipseFill">
            <summary>
            Denotes the color to be filled in the ellipse
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.EllipseStroke">
            <summary>
            denotes the color to be filled in the stroke of the ellipse
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.PathFill">
            <summary>
            denotes the color to be applied in the path
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Themes.DisplayName">
            <summary>
            denotes the name to be displayed in the UI
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BaseCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.BaseCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DelegateCommand`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.DelegateCommand"/> class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.DelegateCommand"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand`1.RaiseCanExecuteChanged">
            <summary>
            Raises CanExecuteChanged event to notify changes in command status.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="E:syncfusion.demoscommon.wpf.DelegateCommand`1.CanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DelegateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="E:syncfusion.demoscommon.wpf.DelegateCommand.CanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.DelegateCommand"/> class.
            </summary>
            <param name="executeAction">The execute action.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:syncfusion.demoscommon.wpf.DelegateCommand"/> class.
            </summary>
            <param name="executeAction">The execute action.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command 
            can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. 
            If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand.RaiseCanExecuteChanged">
            <summary>
            Raises CanExecuteChanged event to notify changes in command status.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DelegateCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. 
            If the command does not require data to be passed, 
            this object can be set to null.
            </param>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.NotificationObject">
            <summary>
            Base class for items that support property notification.
            </summary>
            <remarks>
            This class provides basic support for implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface and for
            marshalling execution to the UI thread.
            </remarks>
        </member>
        <member name="E:syncfusion.demoscommon.wpf.NotificationObject.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>        
        </member>
        <member name="M:syncfusion.demoscommon.wpf.NotificationObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.NotificationObject.RaisePropertyChanged(System.String[])">
            <summary>
            Raises this object's PropertyChanged event for each of the properties.
            </summary>
            <param name="propertyNames">The properties that have a new value.</param>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.AISampleOptions">
            <summary>
            Interaction logic for AISampleOptions.xaml
            </summary>
            <summary>
            AISampleOptions
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AISampleOptions.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.AISettingsWindow">
            <summary>
            Interaction logic for AISettingsWindow.xaml
            </summary>
            <summary>
            AISettingsWindow
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AISettingsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.AllComponentsPage">
            <summary>
            Interaction logic for AllComponentsPage.xaml
            </summary>
            <summary>
            AllComponentsPage
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.AllComponentsPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.HomePage">
            <summary>
            Interaction logic for HomePage.xaml
            </summary>
            <summary>
            HomePage
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.HomePage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ShowcaseApplication">
            <summary>
            Interaction logic for SamplePage3.xaml
            </summary>
            <summary>
            ShowcaseApplication
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ShowcaseApplication.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.WhatsNew">
            <summary>
            Interaction logic for WhatsNew.xaml
            </summary>
            <summary>
            WhatsNew
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.WhatsNew.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SourceCodeViewer.FilePath">
            <summary>
            Gets or sets the file path to show the code snippets. 
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SourceCodeViewer.#ctor">
            <summary>
            initializes the instances of a <see cref="!:SyntaxViewer"/>
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.CommentRegEx">
            <summary>
            Gets the comment reg expression from Code Behind file.
            </summary>
            <value>The comment reg ex.</value>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.StringRegEx">
            <summary>
            Gets the string reg expression from Code Behind file.
            </summary>
            <value>The string reg ex.</value>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.Keywords">
            <summary>
            Gets the keywords from C# file.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.ClassKeywords">
            <summary>
            Gets the class keywords from C# file.
            </summary>
            <value>The class keywords.</value>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.GetAllClasses(System.String)">
            <summary>
            Gets all classes.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <returns></returns>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.Preprocessors">
            <summary>
            Gets the preprocessors from C# file.
            </summary>
            <value>The preprocessors.</value>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.CodeRegex">
            <summary>
            Gets or sets the code regex.
            </summary>
            <value>The code regex.</value>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.CodeParagraphGlobal">
            <summary>
            Gets or sets the code paragraph global.
            </summary>
            <value>The code paragraph global.</value>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:SyntaxRichTextBoxCS"/> class.
            </summary>
            <param name="pro">The pro.</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SyntaxHighlighterCSharp.MatchEval(System.Text.RegularExpressions.Match)">
            <summary>
            Matches the eval.
            </summary>
            <param name="match">The match.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SyntaxHighlighterXAML.FormatCode(System.String)">
            <summary>
            Colors the XAML.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.XmlTokenizerMode">
            <summary>
            Used so you can restart the tokenizer for the next line of XML 
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.InsideComment">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.InsideProcessingInstruction">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.AfterOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.AfterAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.AfterAttributeEquals">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.InsideElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.OutsideElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenizerMode.InsideCData">
            <summary>
            
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.XmlToken">
            <summary>
            
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.XmlTokenKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.Open">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.Close">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.SelfClose">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.OpenClose">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.ElementWhitespace">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.AttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.Equals">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.AttributeValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CommentBegin">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CommentText">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CommentEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.OpenProcessingInstruction">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CloseProcessingInstruction">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CDataBegin">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.CDataEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.TextContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.XmlTokenKind.EOF">
            <summary>
            
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.XmlTokenizer">
            <summary>
            XML tokenizer, tokens are designed to match Visual Studio syntax highlighting 
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.Tokenize(System.String)">
            <summary>
            Tokenizes the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.Tokenize(System.String,syncfusion.demoscommon.wpf.XmlTokenizerMode@)">
            <summary>
            Tokenizes the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="_mode">The _mode.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.Tokenize">
            <summary>
            Tokenizes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokensToStrings(System.Collections.Generic.List{syncfusion.demoscommon.wpf.XmlToken},System.String)">
            <summary>
            Tokenses to strings.
            </summary>
            <param name="list">The list.</param>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.XmlTokenizer.RemainingText">
            <summary>
            Gets the remaining text.
            </summary>
            <value>The remaining text.</value>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.NextToken">
            <summary>
            Nexts the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.IsNameCharacter(System.Char)">
            <summary>
            Determines whether [is name character] [the specified character].
            </summary>
            <param name="character">The character.</param>
            <returns>
            	<c>true</c> if [is name character] [the specified character]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeName(syncfusion.demoscommon.wpf.XmlTokenKind,syncfusion.demoscommon.wpf.XmlTokenizerMode)">
            <summary>
            Tokenizes the name.
            </summary>
            <param name="kind">The kind.</param>
            <param name="nextMode">The next mode.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeElementWhitespace">
            <summary>
            Tokenizes the element whitespace.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.StartsWith(System.String)">
            <summary>
            Startses the with.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeInsideElement">
            <summary>
            Tokenizes the inside element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeText">
            <summary>
            Tokenizes the text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeOutsideElement">
            <summary>
            Tokenizes the outside element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeSimple(System.String,syncfusion.demoscommon.wpf.XmlTokenKind,syncfusion.demoscommon.wpf.XmlTokenizerMode)">
            <summary>
            Tokenizes the simple.
            </summary>
            <param name="text">The text.</param>
            <param name="kind">The kind.</param>
            <param name="nextMode">The next mode.</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeOpen">
            <summary>
            Tokenizes the open.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeEntity">
            <summary>
            Tokenizes the entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeInsideProcessingInstruction">
            <summary>
            Tokenizes the inside processing instruction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeInsideCData">
            <summary>
            Tokenizes the inside C data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.TokenizeInsideComment">
            <summary>
            Tokenizes the inside comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.XmlTokenizer.ColorForToken(syncfusion.demoscommon.wpf.XmlToken,System.String)">
            <summary>
            Colors for token.
            </summary>
            <param name="token">The token.</param>
            <param name="tokenText">The token text.</param>
            <returns></returns>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.HeaderTitleText">
            <summary>
            Title property used to update the title of the Sample browser
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsIOSDKSample">
            <summary>
            To check whether the build is Excel SDK Browser
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel._selectedproduct">
            <summary>
            Maintains the selected product <see cref="T:syncfusion.demoscommon.wpf.ProductDemo"/>
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel._selectedsample">
            <summary>
            Maintains the selected sample <see cref="T:syncfusion.demoscommon.wpf.DemoInfo"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.selectedShowcaseSample" -->
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.selectedthemename">
            <summary>
            Maintains the selected <see cref="T:Syncfusion.SfSkinManager.VisualStyles"/>
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.isProductDemoBusy">
            <summary>
            Maintains busy status of sample browser while switching between themes.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.isShowCaseDemoBusy">
            <summary>
            Property to store busy status of sample browser while launch the show case demo.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.isAISettingsWindowBusy">
            <summary>
            Property to busy status of AISettingsWindow while validating the entered input.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.isWindowMode">
            <summary>
            Gets or sets the property value indicating whether the products demos launch in separate window
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.isThemeInheritMode">
            <summary>
            Gets or sets the property value indicating whether the selected sample thememode is inherit or not
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ProductDemos">
            <summary>
            Gets or sets the collection of product demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ShowcaseDemos">
            <summary>
            Gets or sets the collection of show case demos demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ProductInfo">
            <summary>
             Gets or sets the collection of product and demos information.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.GetDemosDetails">
            <summary>
            Maintains the product demo collection
            </summary>
            <returns>Product demos</returns>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.searchItem">
            <summary>
            Gets  or sets the item searched in the Search text box
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.searchtext">
            <summary>
            Gets  or sets the item searched in the Search text box
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.navigateAllProducts">
            <summary>
            Maintains the command for Navigate all product button.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.searchTextBoxLoadedCommand">
            <summary>
             Maintains the command for <see cref="T:Syncfusion.Windows.Controls.Input.SfTextBoxExt"/> loaded event.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.windowLoadedCommand">
            <summary>
             Maintains the command for <see cref="T:System.Windows.Window"/> loaded event.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.themepanelvisibilitycommand">
            <summary>
            Maintain the command to change the visibility of the theme panel
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.productwindowLoadedCommand">
            <summary>
             Maintains the command for <see cref="T:syncfusion.demoscommon.wpf.ProductDemosWindow"/> loaded event.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.titleBarBackground">
            <summary>
            Gets or set the title bar background
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.titleBarForeground">
            <summary>
            Gets or set the title bar foreground
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.selectedItem">
            <summary>
            Gets or set the selecteditem of the NavigationDrawer
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.navigationContent">
            <summary>
            Gets or set the pageview of the items of NavigationDrawer
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.headerItems">
            <summary>
            Gets or set the HeaderItems Collection
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.clickCommand">
            <summary>
            Maintains the command for the ShowAll ,Explore All Controls ,ListView and GalleryView Buttons
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel._selectedDemo">
            <summary>
            Gets or sets the selected Demo in the Whatsnew Demoslist
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.blurVisibility">
            <summary>
            Property to store visibility state of blur layer in sample browser.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.subCategorySelectedItem">
            <summary>
            Gets or sets the selected subDemo in the demo window
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.modelName">
            <summary>
            Gets or sets the model name.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.endPoint">
            <summary>
            Gets or sets the end point.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedProduct">
            <summary>
            Gets or sets the selected <see cref="T:syncfusion.demoscommon.wpf.ProductDemo"/> product.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsStoreApp">
            <summary>
            Gets or sets the property value indicating whether it is store package application or not.
            </summary>
        </member>
        <member name="F:syncfusion.demoscommon.wpf.DemoBrowserViewModel.CanAutomate">
            <summary>
            Gets or sets the property value indicating whether automate the samples to log bidding error.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsProductDemoBusy" -->
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsShowCaseDemoBusy">
            <summary>
            Property to store busy status of sample browser while launch the show case demo.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsAISettingsWindowBusy">
            <summary>
            Property to store busy status of AISettingsWindow while validating the entered input.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsWindowMode">
            <summary>
            Gets or sets the property value indicating whether the products demos launch in separate window
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedSample">
            <summary>
            Gets or sets the selected <see cref="T:syncfusion.demoscommon.wpf.DemoInfo"/> sample.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedShowcaseSample">
            <summary>
            Gets or sets the selected showcase <see cref="T:syncfusion.demoscommon.wpf.DemoInfo"/> sample.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.IsThemeInheritMode">
            <summary>
            Gets or sets the property value indicating whether the selected sample thememode  is inherit or not.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedThemeName">
            <summary>
            Gets or sets the selected <see cref="T:Syncfusion.SfSkinManager.VisualStyles"/> of application.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SearchItem">
            <summary>
            Gets or set the item serached in the search text box
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SearchText">
            <summary>
            Gets or set the item serached in the search text box
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.TitleBarBackground">
            <summary>
            Gets or set the title bar background
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.TitleBarForeground">
            <summary>
            Gets or set the title bar foreground
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.NavigateAllProductsCommand">
            <summary>
            Gets the command  <see cref="T:System.Windows.Controls.Button"/> click event.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ThemePanelVisibility">
            <summary>
            Gets or sets the property used to Indicates the visibility of the ThemePanel
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SearchTextBoxLoadedCommand">
            <summary>
            Gets the command  <see cref="T:Syncfusion.Windows.Controls.Input.SfTextBoxExt"/> loaded event.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.WindowLoadedCommand">
            <summary>
            Gets the command  <see cref="T:syncfusion.demoscommon.wpf.MainWindow"/> loaded event.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ProductWindowLoadedCommand">
            <summary>
            Gets the command  <see cref="T:syncfusion.demoscommon.wpf.ProductDemosWindow"/> loaded event.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ClickCommand">
            <summary>
            Gets the command for the ShowAll ,Explore All Controls ,ListView and GalleryView Buttons
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedItem">
            <summary>
            Gets or sets the SelectedItem of the NavigationDrawer
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.NavigationContent">
            <summary>
            Gets or sets the UserControl for the selected NavigationItem
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.HeaderItems">
            <summary>
            Gets or sets the property value indicating the collection of HeaderItems.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.HighlightedProductDemos">
            <summary>
            Gets or sets the collection of Highlighted product demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.AIHilighlightedDemos">
            <summary>
            Gets or sets the collection of Highlighted AI demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.HighlightedShowCaseDemos">
            <summary>
            Gets or sets the collection of Highlighted ShowCase demos.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.WhatsNewDemos">
            <summary>
            Gets or sets the collection of WhatsNewDemos
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.AISampleDemos">
            <summary>
            Gets or sets the collection of AISampleDemos
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SelectedDemo">
            <summary>
            Gets or sets the selected demo in the WhatsNew List
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.BlurVisibility">
            <summary>
            Gets or sets the visibility state of the blur layer in sample browser.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SubCategorySelectedItem">
            <summary>
            Gets or sets the selected sub demo in the demo window
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ModelName">
            <summary>
            Gets or sets the model name in the AI Setup Window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.EndPoint">
            <summary>
            Gets or sets the end point in the AI Setup Window.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.Key">
            <summary>
            Gets or sets the key in the AI Setup Window.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateHighlightedProductDemos">
            <summary>
            Method helps to create collection of Product Demos that are Highlighted
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateAIHighlightedProductDemos">
            <summary>
            Method helps to create collection of AI Demos that are Highlighted
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateShowCaseDemos">
            <summary>
            Method helps to create collection of Showcase Demos that are Highlighted
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateWhatsNewDemos">
            <summary>
            Method helps to create collection for Demos with New,Updated and Preview Tags.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateAISampleDemos">
            <summary>
            Method helps to create collection for Demos with New,Updated and Preview Tags.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulateProducts">
            <summary>
            Method helps to create colllection for Showcase demos and products collections.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSelectedDemoChanged">
            <summary>
            Method helps to perform demo selection change in WhatsNew List.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSelectedProductChanged">
            <summary>
            Method helps to perform product selection change.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSubCategorySelectedItemChanged">
            <summary>
            Method helps to perform subdemo selection change operation.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSelectedSampleChanged(syncfusion.demoscommon.wpf.DemoInfo)">
            <summary>
            Method helps to perform sample selection change operation.
            </summary>
            <param name="demoInfo">Selected Sample</param>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ColorPaletteVisibility">
            <summary>
            Gets or sets the property value indicating whether the colorpalette combobox should be visible or not
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnThemeChanged(System.String)">
            <summary>
            Method helps to update the selected <see cref="T:Syncfusion.SfSkinManager.VisualStyles"/>
            </summary>
            <param name="selectedTheme">Selected Theme</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSearchItemChanged(syncfusion.demoscommon.wpf.ProductInfo)">
            <summary>
            Method helps to navigate the product which searched using text box.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.NavigateAllProducts(System.Object)">
            <summary>
            Method used to excute navigate all products <see cref="T:System.Windows.Controls.Button"/> click event
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.SearchTextBoxLoaded(System.Object)">
            <summary>
            Method used to excute   <see cref="T:Syncfusion.Windows.Controls.Input.SfTextBoxExt"/> loaded event
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.WindowLoaded(System.Object)">
            <summary>
            Method used to excute   <see cref="T:syncfusion.demoscommon.wpf.MainWindow"/> loaded event
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ProductWindowLoaded(System.Object)">
            <summary>
            Method used to excute   <see cref="T:syncfusion.demoscommon.wpf.ProductDemosWindow"/> loaded event
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.GetProducts(System.String,System.Object)">
            <summary>
            Helps to get the product demos based on search result
            </summary>
            <param name="search">search text</param>
            <param name="item">search item</param>
            <returns></returns>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.ContainsIgnoreCaseAndSpaceRemoved(System.String,System.String)">
            <summary>
            Checks if the source string contains a search string (ignoring case and spaces) and returns a boolean result.
            </summary>
            <param name="source"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoBrowserViewModel.Palettes">
            <summary>
            Gets or sets the property value indicating the list of colorpalette for the selected Theme.
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnPaletteChanged(System.String)">
            <summary>
            Method helps to update the selected ColorPalettes
            </summary>
            <param name="ThemeName">Selected Theme</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.changePalette(System.String,System.String,System.String)">
            <summary>
            Method helps to Change the Color palette for the SelectedTheme
            </summary>
            <param name="themeType">Type of the theme</param>
            <param name="theme">Name of the selected theme</param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.PopulatePaletteList">
            <summary>
            Method helps to populate palette items into Palettelist
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.NavigationItems">
            <summary>
            Method helps to populate items into NavigationDrawer HeaderItems
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoBrowserViewModel.OnSelectionChanged">
            <summary>
            Method helps to display page based on NavigationItem selection
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DemoLauncherView">
            <summary>
            Interaction logic for DemoLauncherView.xaml
            </summary>
            <summary>
            DemoLauncherView
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoLauncherView.HyperLinkStyle">
            <summary>
            Gets or sets the HyperLinkStyle for the collection of helplinks in the documentation
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemoLauncherView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.DemosListView">
            <summary>
            Interaction logic for DemoView.xaml
            </summary>
            <summary>
            DemosListView
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemosListView.ThemeChanged">
            <summary>
            This method is used to remove the border of the items in  themepanel on mousehover for FluentTheme
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemosListView.DEMOSFRAME_Navigated(System.Object,System.Windows.Navigation.NavigationEventArgs)">
            <summary>
             Occurs when the content that is being navigated to has been found
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemosListView.mousehandler(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This  handler is used for scrolling the Items in themePanel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemosListView.OnAllProductsPreviewMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This event handler assigns a command (viewModel.NavigateAllProductsCommand) to the button's command property when the left mouse button is released 
            and executes the command if it is not null and can be executed.
            /// </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.DemosListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.Options">
            <summary>
             Gets or sets the options view.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.OptionsPosition">
            <summary>
             Gets or sets position of <see cref="P:syncfusion.demoscommon.wpf.DemoControl.Options"/> view. You can position left, right, top or button and contorl the width or height using <see cref="P:syncfusion.demoscommon.wpf.DemoControl.OptionsSize"/>
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.OptionsSize">
            <summary>
            Gets or sets the width of <see cref="P:syncfusion.demoscommon.wpf.DemoControl.Options"/> view when <see cref="P:syncfusion.demoscommon.wpf.DemoControl.OptionsPosition"/> is <see cref="F:System.Windows.Controls.Dock.Left"/> and <see cref="F:System.Windows.Controls.Dock.Right"/>.
            Gets or sets the height of <see cref="P:syncfusion.demoscommon.wpf.DemoControl.Options"/> view when <see cref="P:syncfusion.demoscommon.wpf.DemoControl.OptionsPosition"/> is <see cref="F:System.Windows.Controls.Dock.Top"/> and <see cref="F:System.Windows.Controls.Dock.Bottom"/>.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.OptionsTitle">
            <summary>
            Gets or sets the text displayed as options heading. you can hide the same by setting empty string.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.DocumentsItemSource">
            <summary>
            Gets or sets the item source for a collection of helplinks in the documentation
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.HyperLinkStyle">
            <summary>
            Gets or sets the HyperLinkStyle for the collection of helplinks in the documentation
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.OptionsHorizontalScrollBarVisibility">
            <summary>
            Gets or sets the HorizontalScrollBarVisibility of the option panel
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.OptionsVerticalScrollBarVisibility">
            <summary>
            Gets or Sets the VerticalScrollBarVisibility of the option panel
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.SubCategoryDemos">
            <summary>
            Gets or sets the SubCategoryDemos property that provides access to a list of DemoInfo objects.
            </summary>
        </member>
        <member name="P:syncfusion.demoscommon.wpf.DemoControl.SubCategorySelectedItem">
            <summary>
            Gets or sets the value of SubCategorySelectedItem property in the Demo window.
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ErrorWindow">
            <summary>
            Interaction logic for ProgressWindow.xaml
            </summary>
            <summary>
            ErrorWindow
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ErrorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ProductDemosWindow">
            <summary>
            Interaction logic for ProductDemosWindow.xaml
            </summary>
            <summary>
            ProductDemosWindow
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductDemosWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.ProductsListView">
            <summary>
            Interaction logic for DemoView.xaml
            </summary>
            <summary>
            ProductsListView
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.ProductsListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:syncfusion.demoscommon.wpf.SourceCodeTabView">
            <summary>
            Interaction logic for SourceCodeViewRwader.xaml
            </summary>
            <summary>
            SourceCodeTabView
            </summary>
        </member>
        <member name="M:syncfusion.demoscommon.wpf.SourceCodeTabView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
